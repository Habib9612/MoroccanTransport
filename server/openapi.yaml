openapi: 3.0.0
info:
  title: FreightConnect API
  version: 1.0.0
  description: API documentation for FreightConnect logistics platform

servers:
  - url: /api
    description: API server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    Load:
      type: object
      properties:
        id:
          type: integer
        shipperId:
          type: integer
        origin:
          type: string
        destination:
          type: string
        weight:
          type: number
        price:
          type: number
        status:
          type: string
          enum: [available, booked, in_transit, delivered, completed]
        equipmentType:
          type: string
        pickupDate:
          type: string
          format: date-time
        deliveryDate:
          type: string
          format: date-time

    TrackingUpdate:
      type: object
      properties:
        id:
          type: integer
        loadId:
          type: integer
        status:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        createdAt:
          type: string
          format: date-time

paths:
  /loads:
    get:
      summary: Get available loads
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of available loads
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Load'

    post:
      summary: Create a new load
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Load'
      responses:
        '201':
          description: Load created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Load'

  /loads/{id}/book:
    post:
      summary: Book a load
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Load booked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Load'

  /loads/{id}/tracking:
    get:
      summary: Get tracking updates for a load
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of tracking updates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrackingUpdate'

  /loads/price-suggestion:
    post:
      summary: Get price suggestion for a load
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Load'
      responses:
        '200':
          description: Price suggestion
          content:
            application/json:
              schema:
                type: object
                properties:
                  suggestedPrice:
                    type: number
                  confidence:
                    type: number